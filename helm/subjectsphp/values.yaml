replicaCount: 1

image:
  repository: gcr.io/tls-terraform/subjects-on
  #pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  #tag: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "subjectssec"

podAnnotations: {}

podSecurityContext: {}
  #fsGroup: 1000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  #runAsNonRoot: true
  #runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# host name configured in ingress route - not using base helm template as need traefik route
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  hosts:
    - host: tlson.clemoregan.com
      paths:
        - path: /
          pathType: Prefix
  tls:
  #   hosts:
  #     - "tlson.clemoregan.com"
   source: secret
   secretName: traefik-tls-cert
#   passthrough: true

resources: #{}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
 limits:
   cpu: 100m
   memory: 128Mi
 requests:
   cpu: 100m
   memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
  memorylimit: 80Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Following section will be filled by secret during template creation
db:
  dbpass:

# Certificates pre-loaded to the cluster as config maps
# volumeMounts:
#   - name: traefik-cert
#     mountPath: "/etc/ssl/certs/"
#     subPath: fullchain.pem
#     readOnly: false
#   - name: traefik-key
#     mountPath: "/etc/ssl/certs/"
#     subPath: privkey.pem
#     readOnly: false
# volumes:
#   - name: '{{ printf "%s-configs" .Release.Name }}'
#     mountPath: "/config"
#     type: configMap
#   - name: traefik-cert
#     mountPath: "/etc/ssl/certs/fullchain.pem"
#     type: configMap
#   - name: traefik-key
#     mountPath: "/etc/ssl/certs/privkey.pem"
#     type: configMap
