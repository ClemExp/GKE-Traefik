# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
traefik:
  globalArguments:
    - "--global.checknewversion"
    - "--global.sendAnonymousUsage=false"

  service:
    type: LoadBalancer
    spec:
    annotations:
      ingress.gcp.kubernetes.io/pre-shared-cert: "self-managed-cert"
      kubernetes.io/ingress.global-static-ip-name: "traefike2e-lb-static-ip"
      traefik.ingress.kubernetes.io/router.entrypoints: https
      beta.cloud.google.com/backend-config: '{"ports": {"32443": "traefik-backend-service"}}'
      # Specify the type of traffic accepted
      cloud.google.com/app-protocols: '{"service-port":"HTTPS"}'
      # Specify the BackendConfig to be used for the exposed ports
      #cloud.google.com/backend-config: '{"default": "{{ .Values.backend_service_name }}"}'
      #cloud.google.com/backend-config: '{"default": "traefik-backend-service"}'
      # Enables the Cloud Native Load Balancer
      #cloud.google.com/neg: '{"ingress": true}'
      # Ensuring traefik is the default ingress controller

  # Ensuring traefik is the default ingress controller
  ingressClass:
    enabled: true
    isDefaultClass: false

  ports:
    web:
      port: 8000
      expose: true
      exposedPort: 80
      protocol: TCP
      nodePort: 32080
    websecure:
      port: 8443
      expose: true
      exposedPort: 443
      protocol: TCP
      nodePort: 32443
      tls:
        enabled: true
        domains:
          - main: traefike2e.clemoregan.com

  # Add the following to enable the traefik to prometheus sending of metrics within the cluster
  # See reference configuration: https://doc.traefik.io/traefik/observability/metrics/prometheus/
  metrics:
    prometheus:
      enabled: true
      addRoutersLabels: true
      addServicesLabels: true
      serviceMonitor:
      service:
        enabled: true

  logs:
    access:
      enabled: true

  # Enable persistence using Persistent Volume Claims
  persistence:
    storageClass: "backedup"
    enabled: false
    name: data
    accessMode: ReadWriteOnce
    size: 128Mi
    path: /data
    annotations: {}

  podSecurityContext:
    fsGroup: 1003
    # Make sure that the group of the directory where the PersistentVolume is mounted is actually 1003

  providers:
    kubernetesCRD:
      enabled: true

  additionalArguments:
    - "--providers.file.filename=/config/dynamic.yaml"
    - "--providers.file.watch=true"
    - "--providers.kubernetesingress.ingressclass=traefik"
    - "--ping"
    - "--metrics.prometheus=true"
    - "--metrics.prometheus.entryPoint=metrics"
    - "--entryPoints.metrics.address=:9100"
    - "--entryPoints.web.http.redirections.entryPoint.to=:443"
    - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
    - "--log.filepath=/var/log/traefik/traefik.log"
    - "--accesslog.filepath=/var/log/traefik/access.log"

  # Certificates pre-loaded to the cluster as config maps
  volumeMounts:
    - name: traefik-cert
      mountPath: "/etc/ssl/certs/"
      subPath: fullchain.pem
      readOnly: false
    - name: traefik-key
      mountPath: "/etc/ssl/certs/"
      subPath: privkey.pem
      readOnly: false
    - name: traefik-logs
      emptyDir: {}
  volumes:
    - name: '{{ printf "%s-configs" .Release.Name }}'
      mountPath: "/config"
      type: configMap
    - name: traefik-cert
      mountPath: "/etc/ssl/certs/fullchain.pem"
      type: configMap
    - name: traefik-key
      mountPath: "/etc/ssl/certs/privkey.pem"
      type: configMap
    - name: traefik-logs
      mountPath: "/var/log/traefik"

# Following certificates are to be used by traefik - to be included in the dynamic config map
certFile: "/etc/ssl/certs/fullchain.pem/fullchain.pem"
keyFile: "/etc/ssl/certs/privkey.pem/privkey.pem"

domain: traefike2e.clemoregan.com
services:
  - name: sample_app
    subdomain: sample_app1
    host: 10.0.0.1
    path: /app1/
    target_port: 8500
  # - name: sample_app
  #   subdomain: sample_app2
  #   host: 10.0.0.2
  #   path: /app2/
  #   target_port: 9500