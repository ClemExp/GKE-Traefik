ingressClass:
  enabled: true
  isDefaultClass: false

additionalArguments:
  - "--providers.kubernetesingress.ingressclass=traefik"
  - "--ping"
  - "--metrics.prometheus=true"
  - "--metrics.prometheus.entryPoint=metrics"
  - "--entryPoints.metrics.address=:9100"

providers:
  kubernetesCRD:
    enabled: true

ports:
  # web:
  #   port: 8000
  #   expose: true
  #   exposedPort: 80
  #   protocol: TCP
  #   nodePort: 32080
  websecure:
    port: 8443
    expose: true
    exposedPort: 443
    protocol: TCP
    nodePort: 32443
    tls:
      enabled: true
      domains:
        - main: traefike2e.clemoregan.com

# Add the following to enable the traefik to prometheus sending of metrics within the cluster
metrics:
  prometheus:
    enabled: true
    serviceMonitor:
    service:
      enabled: true

service:
  enabled: true
  type: NodePort
#  annotations:
#    prometheus.io/scrape: true
#    prometheus.io/port: 8000


  # Enable persistence using Persistent Volume Claims
  # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
persistence:
  storageClass: "backedup"
  enabled: false
  name: data
  accessMode: ReadWriteOnce
  size: 128Mi
  path: /data
  annotations: {}

podSecurityContext:
  fsGroup: 1003
    # Make sure that the group of the directory where the PersistentVolume is mounted is actually 1003

# Certificates pre-loaded to the cluster as config maps
volumeMounts:
  - name: traefik-cert
    mountPath: "/etc/ssl/certs/"
    subPath: fullchain.pem
    readOnly: false
  - name: traefik-key
    mountPath: "/etc/ssl/certs/"
    subPath: privkey.pem
    readOnly: false
volumes:
  - name: '{{ printf "%s-configs" .Release.Name }}'
    mountPath: "/config"
    type: configMap
  - name: traefik-cert
    mountPath: "/etc/ssl/certs/fullchain.pem"
    type: configMap
  - name: traefik-key
    mountPath: "/etc/ssl/certs/privkey.pem"
    type: configMap
