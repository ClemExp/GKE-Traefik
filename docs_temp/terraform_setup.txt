
******** TLS E2E - SSL passthrough **********

Docs: Nice diagram & explanation ingress - LB: https://engineering.sada.com/google-kubernetes-engine-ingress-configuration-for-production-environments-9677a303166a
  Note: https://cloud.google.com/kubernetes-engine/docs/concepts/ingress
  cloud.google.com/neg: '{"ingress": true}'

To try::::

1. ChatGPT generated code - not bad starting point, but not fully correct
2. https://stackoverflow.com/questions/70782206/gke-ingress-configuration-for-https-enabled-applications-leads-to-failed-to-conn
SVC traefik ingress - LB when created from ingress however uses different backend (not what we are specifying in traefik SVC - 32443)
3. What works! Load balancer service type in traefik helm chart, then kubectl get svc in EXTERNAL-IP:
https://stackoverflow.com/questions/61172390/treafik-lets-encrypt-simplest-example-on-gke

******** TLS termination cluster ************

Managed certificate setup:
https://github.com/hashicorp/terraform-provider-google/issues/11354
  Need kubectl or can create via google_compute_managed_ssl_certificate?

Probably can only go up to here though - as need to configure DNS then and wait for active (30 mins)
Be4 creating ingress
After ingress - had to mess around with LB to get HTTPS - HTTP redirection - new FE & change healthcheck on backend
  Could try to automate this but will take some time

Today: 
- Try terraform TLS
    Check prometheus enabled on traefik dashboard
    Install prometheus stack
      Should deploy the traefik-prometheus on port 9100
    Change scrape tp targets: ['traefik.c.com/metrics:443'] - needed?
    or Expose metrics port (helm) traefiuk? (websecure, web & now metrics) - needed?
